/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wellington.gerenciadorDeManobras.apresentacao;

import java.sql.SQLException;
import java.text.ParseException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import wellington.gerenciadorDeManobras.entidade.Manobra;
import wellington.gerenciadorDeManobras.entidade.Treino;
import wellington.gerenciadorDeManobras.excecao.CampoObrigatorioException;
import wellington.gerenciadorDeManobras.negocio.ManobraBO;
import wellington.gerenciadorDeManobras.negocio.TreinoBO;

/**
 *
 * @author Wellington
 */
public class FormCadastrarEditarTreino extends javax.swing.JFrame {

    private List<Manobra> manobras;
    private GerenciarTreinos gerenciarTreinos;
    private Treino treinoEmEdicao;
    String item = "";

    /**
     * Creates new form FormCadastrarEditarTreino
     */
    FormCadastrarEditarTreino(GerenciarTreinos gerenciarTreinos, Treino treinoSelecionado) throws SQLException {
        this(gerenciarTreinos);
        this.treinoEmEdicao = treinoSelecionado;
        //this.carregarComboManobras();
        this.inicializaCampostela();      
    }

    public FormCadastrarEditarTreino(GerenciarTreinos gerenciarTreinos) throws SQLException {
        this.gerenciarTreinos = gerenciarTreinos;
        this.treinoEmEdicao = new Treino();
        this.initComponents();
        this.carregarComboManobras();

    }

    @Override
    public void setVisible(boolean exibir) {
        super.setVisible(exibir);
        if (exibir == true) {
            try {
                this.carregarComboManobras();
            } catch (SQLException ex) {
                Logger.getLogger(FormCadastroManobra.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void carregarComboManobras() throws SQLException {
        ManobraBO manobraBO = new ManobraBO();
        manobras = manobraBO.buscarTodasManobras();
        cbxManobras.removeAllItems();
        for (Manobra m : manobras) {
            cbxManobras.addItem(m.getNome());
        }
    }

    public void getItemComboManobras(String itemCombo) {
        this.item = itemCombo;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblManobra = new javax.swing.JLabel();
        cbxManobras = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        btnFecharTela = new javax.swing.JButton();
        txtProgressoTreino = new javax.swing.JFormattedTextField();
        txtQntddiaTreinando = new javax.swing.JFormattedTextField();
        lblinfo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setExtendedState(6);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Novo Treino", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        lblManobra.setText("Manobra");

        jLabel1.setText("Progresso do treino");

        jLabel2.setText("%");

        jLabel3.setText("Quantidade de dias treinando");

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnFecharTela.setText("Voltar");
        btnFecharTela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharTelaActionPerformed(evt);
            }
        });

        txtProgressoTreino.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));

        lblinfo.setText("info");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblManobra)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxManobras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtProgressoTreino, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQntddiaTreinando, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                        .addComponent(btnSalvar)
                        .addGap(18, 18, 18)
                        .addComponent(btnFecharTela))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblinfo)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnFecharTela, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblManobra)
                        .addComponent(cbxManobras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(txtProgressoTreino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtQntddiaTreinando, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(78, 78, 78)
                .addComponent(lblinfo)
                .addContainerGap(105, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (verificaEditarOuSalvar == 1) {
            try {
                this.atualizar();
            } catch (CampoObrigatorioException | ParseException | SQLException ex) {
                Logger.getLogger(FormCadastroManobra.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                this.incluirTreino();
            } catch (SQLException ex) {
                Logger.getLogger(FormCadastrarEditarTreino.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnFecharTelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharTelaActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnFecharTelaActionPerformed

    private void incluirTreino() throws SQLException {
        TreinoBO treinoBO = new TreinoBO();
        this.recuperarCamposTela();
        treinoBO.validarCamposObrigatoriosIdManobra(treinoEmEdicao);
        treinoBO.inserir(treinoEmEdicao);
        JOptionPane.showMessageDialog(this, "Treino cadastrado com sucesso!", "Novo Treino", JOptionPane.INFORMATION_MESSAGE);
        this.limparCamposTela();
        this.gerenciarTreinos.carregarTabelaDeTreino();
    }

    private void atualizar() throws CampoObrigatorioException, ParseException, SQLException {
                      
        TreinoBO treinoBO = new TreinoBO();
        this.recuperarCamposTela();
        treinoBO.validarCamposObrigatoriosAtualizar(treinoEmEdicao);
        treinoBO.atualizar(treinoEmEdicao);
        JOptionPane.showMessageDialog(this, "Dados da manobra alterado com sucesso", "Ediçao de manobra", JOptionPane.INFORMATION_MESSAGE);
        this.limparCamposTela();
        this.gerenciarTreinos.carregarTabelaDeTreino();
    }

    private void recuperarCamposTela() {
        this.getItemComboManobras(cbxManobras.getSelectedItem().toString());//recuperar valor selecionado no combobox de categoria, para poder resgatar o id do banco de dados e não do indice do combobox
        int posicaoSelecionada = 0;
        for (Manobra m : manobras) {
            if (m.getNome().equals(item)) {
                posicaoSelecionada = m.getId();
                treinoEmEdicao.setIdManobra(posicaoSelecionada);
            }
        }
        if (txtProgressoTreino.getText() == null) {
            treinoEmEdicao.setProgresso(0);
        } else {
            if(treinoEmEdicao.getProgresso() > 100 || treinoEmEdicao.getProgresso() < 0){
                lblinfo.setText("O seu treino parece que chegou ao fim verifique se o progresso está correto!");
            }
        }
        
        if (txtQntddiaTreinando.getText() == null) {
            treinoEmEdicao.setQntddias(0);
        } else {
            if(treinoEmEdicao.getQntddias() < 0 )
          lblinfo.setText("O seu treino parece que chegou ao fim verifique se o progresso está correto!");
        }
    }

    private void inicializaCampostela() {
        for (Manobra m : manobras) {
            if (treinoEmEdicao.getIdManobra() == m.getId()) {
                cbxManobras.setSelectedItem(m.getNome());
            }
        }
        txtProgressoTreino.setText(Integer.toString(treinoEmEdicao.getProgresso()));
        txtQntddiaTreinando.setText(Integer.toString(treinoEmEdicao.getQntddias()));
    }

    private void limparCamposTela() {
        this.txtProgressoTreino.setText("");
        this.txtQntddiaTreinando.setText("");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFecharTela;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cbxManobras;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblManobra;
    private javax.swing.JLabel lblinfo;
    private javax.swing.JFormattedTextField txtProgressoTreino;
    private javax.swing.JFormattedTextField txtQntddiaTreinando;
    // End of variables declaration//GEN-END:variables

    int verificaEditarOuSalvar;

    public int getVerificaEditarOuSalvar() {
        return verificaEditarOuSalvar;
    }

    public void setVerificaEditarOuSalvar(int verificaEditarOuSalvar) {
        this.verificaEditarOuSalvar = verificaEditarOuSalvar;

    }

}

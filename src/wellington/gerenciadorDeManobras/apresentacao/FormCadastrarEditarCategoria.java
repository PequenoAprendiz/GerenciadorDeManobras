/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wellington.gerenciadorDeManobras.apresentacao;

import java.sql.SQLException;
import java.text.ParseException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import wellington.gerenciadorDeManobras.entidade.Categoria;
import wellington.gerenciadorDeManobras.excecao.CampoObrigatorioException;
import wellington.gerenciadorDeManobras.negocio.CategoriaBO;

/**
 *
 * @author Wellington
 */
public class FormCadastrarEditarCategoria extends javax.swing.JFrame {

    private Categoria categoriaEmEdicao;
    private GerenciarCategorias gerenciarCategorias;
    // private GerenciarCategorias editarCategoriasform;
    private List<Categoria> categorias;

    /**
     * Creates new form FormCadastrarCategoria
     */
    public FormCadastrarEditarCategoria(GerenciarCategorias gerenciarCategorias, Categoria categoriaSelecionado) throws ParseException, SQLException {
        this(gerenciarCategorias);
        this.categoriaEmEdicao = categoriaSelecionado;
        this.inicializaCamposCategoria();
    }

    FormCadastrarEditarCategoria(GerenciarCategorias gerenciarCategorias) throws SQLException {
        this.gerenciarCategorias = gerenciarCategorias;
        this.categoriaEmEdicao = new Categoria();
        this.initComponents();
        this.recuperarCamposTela();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelAdicionarCategoria = new javax.swing.JPanel();
        lblNomeCategoria = new javax.swing.JLabel();
        txtNomeCategoria = new javax.swing.JTextField();
        lblNomeCategoria1 = new javax.swing.JLabel();
        txtDescricaoCategoria = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        btnFecharTela = new javax.swing.JButton();
        lblinfo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nova Categoria");
        setExtendedState(6);

        painelAdicionarCategoria.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Adicionar Categoria", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 18))); // NOI18N

        lblNomeCategoria.setText("Nome Categoria");

        txtNomeCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeCategoriaActionPerformed(evt);
            }
        });

        lblNomeCategoria1.setText("Descrição");

        txtDescricaoCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescricaoCategoriaActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar!");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnFecharTela.setText("Voltar");
        btnFecharTela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharTelaActionPerformed(evt);
            }
        });

        lblinfo.setText("info");

        javax.swing.GroupLayout painelAdicionarCategoriaLayout = new javax.swing.GroupLayout(painelAdicionarCategoria);
        painelAdicionarCategoria.setLayout(painelAdicionarCategoriaLayout);
        painelAdicionarCategoriaLayout.setHorizontalGroup(
            painelAdicionarCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAdicionarCategoriaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelAdicionarCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelAdicionarCategoriaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblNomeCategoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomeCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblNomeCategoria1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDescricaoCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalvar)
                        .addGap(18, 18, 18)
                        .addComponent(btnFecharTela))
                    .addGroup(painelAdicionarCategoriaLayout.createSequentialGroup()
                        .addComponent(lblinfo)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        painelAdicionarCategoriaLayout.setVerticalGroup(
            painelAdicionarCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAdicionarCategoriaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelAdicionarCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeCategoria)
                    .addComponent(txtNomeCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNomeCategoria1)
                    .addComponent(txtDescricaoCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFecharTela, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(lblinfo)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 777, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(painelAdicionarCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 164, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(painelAdicionarCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        setSize(new java.awt.Dimension(793, 203));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeCategoriaActionPerformed

    private void txtDescricaoCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescricaoCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescricaoCategoriaActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (editarCategoriaForm == 1) {
            try {
                this.atualizar();
            } catch (SQLException ex) {
                Logger.getLogger(FormCadastrarEditarCategoria.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                this.incluirCategoria();
            } catch (SQLException ex) {
                Logger.getLogger(FormCadastrarEditarCategoria.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnFecharTelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharTelaActionPerformed
        // TODO add your handling code here:
        gerenciarCategorias.toFront();
        this.dispose();
    }//GEN-LAST:event_btnFecharTelaActionPerformed

    private void incluirCategoria() throws SQLException {
        this.recuperarCamposTela();
        CategoriaBO categoriaBO = new CategoriaBO();
        this.validarCamposObrigatorios();
        this.verificarCategoria();
        categoriaBO.incluirCategoria(categoriaEmEdicao);
        JOptionPane.showMessageDialog(this, "Categoria cadastrada com sucesso!", "Cadastro de nova Catagoria", JOptionPane.INFORMATION_MESSAGE);
        this.limparCamposTela();
        this.gerenciarCategorias.carregarTabelaDeCategorias();
    }

    private void atualizar() throws CampoObrigatorioException, SQLException {
        this.recuperarCamposTela();
        CategoriaBO categoriaBO = new CategoriaBO();
        this.validarCamposObrigatorios();
        categoriaBO.atualizar(categoriaEmEdicao);
        JOptionPane.showMessageDialog(this, "Categoria atualizada com sucesso!", "Edição de Catagoria", JOptionPane.INFORMATION_MESSAGE);
        this.limparCamposTela();
        this.gerenciarCategorias.carregarTabelaDeCategorias();
    }

    
    public void verificarCategoria() throws SQLException{
        CategoriaBO categoriaBO = new CategoriaBO();
         categorias = categoriaBO.buscarTodasCategorias();
        for (Categoria categoria : categorias) {
            if (categoriaEmEdicao.getNome().equals(categoria.getNome())) {
                this.lblinfo.setText("Uma categoria como o mesmo nome já existe no sistema!");
            }
        }
    }
    
     public void validarCamposObrigatorios( ) throws CampoObrigatorioException {
        if (txtDescricaoCategoria.getText().trim().isEmpty()){
            this.lblinfo.setText("Campo descrição está vazio!");
            throw new CampoObrigatorioException();        
        }        
        if(txtNomeCategoria.getText().trim().isEmpty()) {
            this.lblinfo.setText("Campo Nome está vazio!");
            throw new CampoObrigatorioException();
        }
        this.lblinfo.setText("Info");
    }
    
    private void recuperarCamposTela() throws SQLException {
        categoriaEmEdicao.setNome(txtNomeCategoria.getText());
        categoriaEmEdicao.setDescricao(txtDescricaoCategoria.getText());
        CategoriaBO categoriaBO = new CategoriaBO();
        categorias = categoriaBO.buscarTodasCategorias();
        for (Categoria categoria : categorias) {
            if (categoriaEmEdicao.getNome().equals(categoria.getNome())) {
                categoriaEmEdicao.setId(categoria.getId());
            }
        }
    }

    private void limparCamposTela() {
        this.txtNomeCategoria.setText("");
        this.txtDescricaoCategoria.setText("");
    }

    public void inicializaCamposCategoria() {
        txtNomeCategoria.setText(categoriaEmEdicao.getNome());
        txtDescricaoCategoria.setText(categoriaEmEdicao.getDescricao());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFecharTela;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JLabel lblNomeCategoria;
    private javax.swing.JLabel lblNomeCategoria1;
    private javax.swing.JLabel lblinfo;
    private javax.swing.JPanel painelAdicionarCategoria;
    private javax.swing.JTextField txtDescricaoCategoria;
    private javax.swing.JTextField txtNomeCategoria;
    // End of variables declaration//GEN-END:variables

    public int editarCategoriaForm;

    public int getVerificaEditarOuSalvar() {
        return editarCategoriaForm;
    }

    public void setVerificaEditarOuSalvar(int editarManobrasFor) {
        this.editarCategoriaForm = editarManobrasFor;

    }

}
